$date
2022-10-30T10:44+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ALU $end
 $var wire 1 ! _GEN_22 $end
 $var wire 1 " _GEN_16 $end
 $var wire 1 # _GEN_2 $end
 $var wire 1 $ _GEN_10 $end
 $var wire 1 % _T $end
 $var wire 64 & _GEN_19 $end
 $var wire 1 ' _GEN_5 $end
 $var wire 32 ( _GEN_13 $end
 $var wire 1 ) _GEN_8 $end
 $var wire 32 * io_op1 $end
 $var wire 4 + io_sel $end
 $var wire 1 , _GEN_12 $end
 $var wire 32 - _GEN_15 $end
 $var wire 32 . _GEN_7 $end
 $var wire 64 / _GEN_21 $end
 $var wire 1 0 _GEN_18 $end
 $var wire 1 1 _GEN_1 $end
 $var wire 1 2 _GEN_4 $end
 $var wire 1 3 clock $end
 $var wire 1 4 io_cmpResult $end
 $var wire 64 5 _GEN_23 $end
 $var wire 32 6 io_result $end
 $var wire 32 7 _GEN_17 $end
 $var wire 32 8 _GEN_11 $end
 $var wire 1 9 _GEN_20 $end
 $var wire 1 : _GEN_14 $end
 $var wire 1 ; _GEN_6 $end
 $var wire 32 < _GEN_9 $end
 $var wire 32 = io_op2 $end
 $var wire 1 > reset $end
 $var wire 1 ? _GEN_3 $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
b00000000000000000000000000000000 <
0;
b00000000000000000000000000000000 =
b0000000000000000000000000000000000000000000000000000000000000000 5
0'
b00000000000000000000000000000000 (
0>
b00000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000 /
0!
b00000000000000000000000000000000 8
0"
0#
09
0:
02
03
04
b00000000000000000000000000000000 6
b00000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000000000000000000000 &
00
01
b00000000000000000000000000000000 *
0)
b0000 +
0?
0,
b00000000000000000000000000000000 -
0$
$end
#0
1%
1>
#1
13
#6
03
#11
13
#16
03
#21
13
#26
03
#31
13
#36
03
#41
13
#46
03
b0000000000000000000000000000000000000000000000000000000000000100 5
b00000000000000000000000000000010 *
b00000000000000000000000000000100 6
b00000000000000000000000000000010 =
0>
#51
13
#56
03
